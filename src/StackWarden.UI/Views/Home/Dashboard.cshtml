@using StackWarden.Core
@model IEnumerable<StackWarden.UI.Models.Monitor>
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var normal = SeverityState.Normal.ToString();
    var warning = SeverityState.Warning.ToString();
    var error = SeverityState.Error.ToString();
}

<link rel="stylesheet" href="~/Content/styles/dashboard.css" />

@section scripts
{
    <script src="~/Content/scripts/jquery.signalR-2.2.0.min.js"></script>
    <script src="signalr/hubs"></script>
    <script src="~/Content/scripts/knockout-3.4.0.js"></script>
    <script src="~/Content/scripts/stackwarden.js"></script>
    <script src="~/Content/scripts/monitorResults.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            stackwarden.monitorResults.initialize({
                normal: '@normal',
                warning: '@warning',
                error: '@error',
                initialData: JSON.parse('@(Newtonsoft.Json.JsonConvert.SerializeObject(Model))')
            });
        });
    </script>
}

<div class="page-inner">
    <div class="monitorGroupContainer" data-bind="foreach: groups">
        <div class="monitorGroup"
             data-bind="css: {
                            normal: state() === '@normal',
                            warning: state() === '@warning',
                            error: state() === '@error'
                        }">
            <div class="groupName" data-bind="text: groupKey"></div>
            <i class="smallIcon statusIcon fa" data-bind="css: {
                                            'fa-exclamation-triangle': state() == '@warning',
                                            'fa-exclamation-circle': state() == '@error'
                                         }"></i>
            <div class="groupResults" data-bind="foreach: results,
                                                 css: {
                                                    expandedGroupMonitorResults: selectedResult() != null    
                                                 }">
                <div class="resultContainer" data-bind="click: $parent.select, 
                                                        css: { selectedGroupMonitorResult: $parent.selectedResult() && $data == $parent.selectedResult() }">
                    <div class="statusContainer"
                         data-bind="title: details,
                            click: toggleControlPanel,
                            css: {
                                normal: state() === '@normal',
                                warning: state() === '@warning',
                                error: state() === '@error',
                                stale: isStale
                            }">
                        <i class="smallIcon fa fa-chain-broken" data-bind="visible: isStale"></i>
                        <i class="smallIcon fa " data-bind="css: 'fa-' + icon(), visible: !isStale()"></i>
                    </div>
                </div>
            </div>
            <div class="statusMessage"
                 data-bind="text: message,
                            css: {
                                collapsedVertical: !shouldShowMessage()
                            }"></div>
            <div class="controlPanel" data-bind="with: selectedResult, css: { collapsedVertical: !selectedResult() || !shouldShowControlPanel() }">
                <div class="monitorName" data-bind="text: name"></div>
                <div class="message" data-bind="text: message"></div>
                <div class="subPanel toolsPanel" data-bind="css: { collapsedHorizontal: !shouldShowToolsPanel() }">
                    <div class="toggleContainer" data-bind="click: toggleDetailsPanel, visible: hasDetails">
                        <i class="smallIcon fa fa-list-ul"></i>
                        <i class="smallIcon fa fa-angle-right"></i>
                    </div>
                </div>
                <div class="subPanel detailsPanel" data-bind="css: {collapsedHorizontal: !shouldShowDetailsPanel() }">
                    <div class="toggleContainer" data-bind="click: toggleToolsPanel, visible: hasTools">
                        <i class="smallIcon fa fa-angle-left"></i>
                        <i class="smallIcon fa fa-wrench"></i>
                    </div>
                    <table border="0" cellpadding="0" cellspacing="0" data-bind="foreach: details">
                        <tr>
                            <td class="detailData detailName" data-bind="text: key"></td>
                            <td class="detailData detailValue" data-bind="text: value"></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>